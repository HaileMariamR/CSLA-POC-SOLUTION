// <auto-generated />
using System;
using Data_Layer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data_Layer.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("Data_Layer.Model.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Salary")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HireDate = new DateTime(2023, 5, 4, 10, 22, 51, 342, DateTimeKind.Local).AddTicks(561),
                            Name = "Hailemariam",
                            Salary = 234234234m
                        },
                        new
                        {
                            Id = 2,
                            HireDate = new DateTime(2023, 5, 4, 10, 22, 51, 342, DateTimeKind.Local).AddTicks(593),
                            Name = "Fikadie",
                            Salary = 234234234m
                        },
                        new
                        {
                            Id = 3,
                            HireDate = new DateTime(2023, 5, 4, 10, 22, 51, 342, DateTimeKind.Local).AddTicks(596),
                            Name = "Harry",
                            Salary = 234234234m
                        });
                });

            modelBuilder.Entity("Data_Layer.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 4,
                            Password = "user1234",
                            RefreshToken = "",
                            RefreshTokenExpiryTime = new DateTime(2023, 5, 4, 10, 22, 51, 342, DateTimeKind.Local).AddTicks(784),
                            Role = "user",
                            UserName = "user"
                        },
                        new
                        {
                            Id = 5,
                            Password = "admin1234",
                            RefreshToken = "",
                            RefreshTokenExpiryTime = new DateTime(2023, 5, 4, 10, 22, 51, 342, DateTimeKind.Local).AddTicks(791),
                            Role = "admin",
                            UserName = "admin"
                        },
                        new
                        {
                            Id = 6,
                            Password = "siteadmin1234",
                            RefreshToken = "",
                            RefreshTokenExpiryTime = new DateTime(2023, 5, 4, 10, 22, 51, 342, DateTimeKind.Local).AddTicks(794),
                            Role = "siteadmin",
                            UserName = "siteadmin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
